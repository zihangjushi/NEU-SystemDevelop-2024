{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { Management, UserFilled } from \"@element-plus/icons-vue\";\nexport default {\n  components: {\n    Management,\n    UserFilled\n  },\n  setup() {\n    // 用来存放数据的表格\n    const tableData = ref([{\n      date: '2023-06-10',\n      creator: '李四',\n      name: '团队建设会议',\n      state: '进行中',\n      content: '讨论团队建设与发展'\n    }, {\n      date: '2023-05-22',\n      creator: '王五',\n      name: '产品发布会',\n      state: '已结束',\n      content: '介绍新产品功能与特性'\n    }, {\n      date: '2023-04-18',\n      creator: '赵六',\n      name: '技术分享会',\n      state: '未开始',\n      content: '分享最新的技术趋势'\n    }, {\n      date: '2023-03-15',\n      creator: '张三',\n      name: '市场推广会议',\n      state: '已结束',\n      content: '讨论市场推广策略'\n    }, {\n      date: '2023-02-10',\n      creator: '钱七',\n      name: '季度总结会',\n      state: '已结束',\n      content: '总结季度工作成果与问题'\n    }]);\n    const pickerOptions = ref({\n      disabledDate(time) {\n        return time.getTime() > Date.now();\n      },\n      shortcuts: [{\n        text: '今天',\n        onClick(picker) {\n          picker.emit('pick', new Date());\n        }\n      }, {\n        text: '昨天',\n        onClick(picker) {\n          const date = new Date();\n          date.setTime(date.getTime() - 3600 * 1000 * 24);\n          picker.emit('pick', date);\n        }\n      }, {\n        text: '一周前',\n        onClick(picker) {\n          const date = new Date();\n          date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n          picker.emit('pick', date);\n        }\n      }],\n      multipleSelection: []\n    });\n    const value1 = ref('');\n    const input1 = ref('');\n    const input2 = ref('');\n    const multipleTable = ref(null);\n    const toggleSelection = rows => {\n      if (rows) {\n        rows.forEach(row => {\n          multipleTable.value.toggleRowSelection(row);\n        });\n      } else {\n        multipleTable.value.clearSelection();\n      }\n    };\n    const handleSelectionChange = val => {\n      pickerOptions.value.multipleSelection = val;\n    };\n    const handleEdit = (index, row) => {\n      console.log(index, row);\n    };\n    const handleDelete = (index, row) => {\n      console.log(index, row);\n    };\n    const router = useRouter();\n    const personalCenter = () => {\n      router.push('/userCenter');\n    };\n    const back = () => {\n      router.push('/login');\n    };\n    return {\n      tableData,\n      pickerOptions,\n      value1,\n      input1,\n      input2,\n      multipleTable,\n      toggleSelection,\n      handleSelectionChange,\n      handleEdit,\n      handleDelete,\n      personalCenter,\n      back\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","Management","UserFilled","components","setup","tableData","date","creator","name","state","content","pickerOptions","disabledDate","time","getTime","Date","now","shortcuts","text","onClick","picker","emit","setTime","multipleSelection","value1","input1","input2","multipleTable","toggleSelection","rows","forEach","row","value","toggleRowSelection","clearSelection","handleSelectionChange","val","handleEdit","index","console","log","handleDelete","router","personalCenter","push","back"],"sources":["C:\\Users\\dell\\Documents\\GitHub\\NEU-SystemDevelop-2024\\Front_End_Conde\\src\\views\\MeetingManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <el-container style=\"height: 100vh; border: 1px solid #eee\">\r\n\r\n      <!-- /side容器，用来存放侧边菜单 -->\r\n      <el-aside class=\"menu-with-shadow\" width=\"200px\" style=\"color: rgb(255,255,255)\">\r\n        <el-menu :default-openeds=\"['3']\">\r\n          <!-- //序号为1的侧边栏，用来显示测盟汇和图片组件 -->\r\n          <el-menu-item index=\"1\">\r\n            <template #title>\r\n              <img src=\"@/assets/logo1.png\" style=\"width: 40px; height: 40px; margin-right: 5px;\">\r\n              <span style=\"font-size: 20px;\"><strong>测盟汇</strong></span>\r\n            </template>\r\n          </el-menu-item>\r\n          <!-- //序号为2的菜单栏，用来显示标题（首页） -->\r\n          <el-menu-item index=\"2\">\r\n            <template #title>\r\n              <el-icon><HomeFilled /></el-icon>首页\r\n            </template>\r\n          </el-menu-item>\r\n          <!-- //序号为3的菜单栏，用来显示各个菜单项和图标 -->\r\n          <el-sub-menu index=\"3\">\r\n            <template #title><el-icon><Menu /></el-icon>管理</template>\r\n            <el-menu-item-group>\r\n              <el-menu-item index=\"3-1\"><el-icon><UserFilled /></el-icon>用户管理</el-menu-item>\r\n              <el-menu-item index=\"3-2\"><el-icon><Management /></el-icon>部门管理</el-menu-item>\r\n              <el-menu-item index=\"3-3\"><el-icon><Orange /></el-icon>行业动态管理</el-menu-item>\r\n              <el-menu-item index=\"3-4\"><el-icon><List /></el-icon>课程管理</el-menu-item>\r\n              <el-menu-item index=\"3-5\"><el-icon><TrendCharts /></el-icon>会议管理</el-menu-item>\r\n            </el-menu-item-group>\r\n          </el-sub-menu>\r\n        </el-menu>\r\n      </el-aside>\r\n\r\n      <!-- //head容器，用来存放路径信息 -->\r\n      <el-container>\r\n        <el-header class=\"header-with-shadow\" style=\"font-size: 12px\">\r\n          <div style=\"display: flex; justify-content: space-between; width: 100%;\">\r\n            <div style=\"text-align: left;position: relative; top: 20px;\">\r\n              <!-- 用来存放路径信息的头部栏，可以进行路径的跳转 -->\r\n              <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n                <el-breadcrumb-item><a href=\"/\">会议管理</a></el-breadcrumb-item>\r\n                <el-breadcrumb-item>会议列表</el-breadcrumb-item>\r\n                <el-breadcrumb-item>会议详情</el-breadcrumb-item>\r\n              </el-breadcrumb>\r\n            </div>\r\n            <!-- 下拉菜单，用于展开个人中心和退出按钮 -->\r\n            <el-dropdown :hide-on-click=\"false\">\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <el-avatar icon=\"UserFilled\" style=\"font-size: 20px; margin-right: 10px;position: relative; top: 8px;\"></el-avatar>\r\n                <el-button type=\"text\" style=\"font-size: 15px; color: rgb(0,0,0);position: relative; top: 8px;\">徐洋</el-button>\r\n              </div>\r\n              <!-- template是下拉插槽，用来存放dropdown中的内容 -->\r\n              <template #dropdown>\r\n              <!-- 下拉菜单中的选项，前者可以打开个人中心，后者退出登录 -->\r\n              <el-dropdown-menu>\r\n                <el-dropdown-item @click=\"personalCenter\">个人中心</el-dropdown-item>\r\n                <el-dropdown-item @click=\"back\">退出登录</el-dropdown-item>\r\n              </el-dropdown-menu>\r\n              </template>\r\n            </el-dropdown>\r\n          </div>\r\n        </el-header>\r\n\r\n        <!-- main容器，用来存放页面的主要内容 -->\r\n        <el-main>\r\n\r\n          <div style=\"text-align: left;\">\r\n            <!-- 两个文本框及其输入提示信息，分别于input1和input2双向绑定 -->\r\n            <span style=\"color: rgb(150,150,150)\"><strong>会议名称</strong></span>\r\n            <el-input v-model=\"input1\" placeholder=\"请输入内容\" style=\"margin-left: 5px;width: 200px;height: 30px;\"></el-input>\r\n            <span style=\"color: rgb(150,150,150);margin-left: 15px;\"><strong>创建人</strong></span>\r\n            <el-input v-model=\"input2\" placeholder=\"请输入内容\" style=\"margin-left: 5px;width: 200px;height: 30px;\"></el-input>\r\n            <!-- 开始时间和结束时间的选择，双向绑定到了value1属性（目前只有开始时间 -->\r\n            <span style=\"color: rgb(150,150,150);margin-left: 15px;\"><strong>开始时间</strong></span>\r\n            <el-date-picker v-model=\"value1\" type=\"date\" placeholder=\"选择日期\" style=\"margin-left: 5px;\">\r\n            </el-date-picker>\r\n            <!-- 查询和重置按钮 -->\r\n            <el-button type=\"primary\" style=\"margin-left: 15px;\" icon=\"Search\">搜索</el-button>\r\n            <el-button plain style=\"margin-left: 15px;\" icon=\"Refresh\">重置</el-button>\r\n          </div>\r\n\r\n          <!-- 一行中四个按钮，用来新增、删除修改、导出（暂时没有绑定方法） -->\r\n          <el-row style=\"text-align: left;\">\r\n            <el-button type=\"primary\" plain icon=\"Plus\" style=\"margin-top: 5px\">新增</el-button>\r\n            <el-button type=\"success\" plain icon=\"Edit\" style=\"margin-top: 5px\">修改</el-button>\r\n            <el-button type=\"danger\" plain icon=\"Delete\" style=\"margin-top: 5px\">删除</el-button>\r\n            <el-button type=\"warning\" plain icon=\"Download\" style=\"margin-top: 5px\">导出</el-button>\r\n          </el-row>\r\n\r\n          <!-- 用户菜单 -->\r\n          <div class=\"custom-table\" style=\"margin-top: 10px;\">\r\n            <el-table ref=\"multipleTable\" :data=\"tableData\" tooltip-effect=\"dark\" style=\"width: 100%\" @selection-change=\"handleSelectionChange\">\r\n              <!-- 表单列 -->\r\n              <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n              <el-table-column prop=\"name\" label=\"会议名称\" width=\"300\" header-align=\"center\" align=\"center\"></el-table-column>\r\n              <el-table-column prop=\"creator\" label=\"创建人\" width=\"100\" header-align=\"center\" align=\"center\"></el-table-column>\r\n              <el-table-column prop=\"state\" label=\"会议状态\" width=\"100\" header-align=\"center\" align=\"center\"></el-table-column>\r\n              <el-table-column prop=\"content\" label=\"会议内容\" width=\"300\" header-align=\"center\" align=\"center\"></el-table-column>\r\n              <el-table-column prop=\"date\" label=\"开始时间\" width=\"100\" header-align=\"center\" align=\"center\"></el-table-column>\r\n              <el-table-column prop=\"operate\" label=\"操作\" header-align=\"center\" align=\"center\">\r\n                <!-- template插槽，用于向菜单的最后一列中插入两个操作按钮 -->\r\n                <template #default=\"scope\">\r\n                  <el-button size=\"mini\" type=\"success\" icon=\"Edit\" @click=\"handleEdit(scope.$index, scope.row)\">修改</el-button>\r\n                  <el-button size=\"mini\" type=\"danger\" icon=\"Delete\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </el-main>\r\n\r\n        <!-- 同样的容器，但是是背景图片 -->\r\n        <div class=\"container\" style=\"grid-template-rows: auto 1fr auto;margin-left: 500px\">\r\n          <el-pagination background layout=\"prev, pager, next\" :total=\"50\" class=\"pagination\" style=\"grid-row: 3;margin-bottom: 10px\"></el-pagination>\r\n        </div>\r\n\r\n      </el-container>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport {Management, UserFilled} from \"@element-plus/icons-vue\";\r\nexport default {\r\n  components: {Management, UserFilled},\r\n  setup() {\r\n    // 用来存放数据的表格\r\n    const tableData = ref([\r\n      {\r\n        date: '2023-06-10',\r\n        creator: '李四',\r\n        name: '团队建设会议',\r\n        state: '进行中',\r\n        content: '讨论团队建设与发展'\r\n      },\r\n      {\r\n        date: '2023-05-22',\r\n        creator: '王五',\r\n        name: '产品发布会',\r\n        state: '已结束',\r\n        content: '介绍新产品功能与特性'\r\n      },\r\n      {\r\n        date: '2023-04-18',\r\n        creator: '赵六',\r\n        name: '技术分享会',\r\n        state: '未开始',\r\n        content: '分享最新的技术趋势'\r\n      },\r\n      {\r\n        date: '2023-03-15',\r\n        creator: '张三',\r\n        name: '市场推广会议',\r\n        state: '已结束',\r\n        content: '讨论市场推广策略'\r\n      },\r\n      {\r\n        date: '2023-02-10',\r\n        creator: '钱七',\r\n        name: '季度总结会',\r\n        state: '已结束',\r\n        content: '总结季度工作成果与问题'\r\n      }\r\n    ]);\r\n      \r\n    const pickerOptions = ref({\r\n      disabledDate(time) {\r\n        return time.getTime() > Date.now();\r\n      },\r\n      shortcuts: [{\r\n        text: '今天',\r\n        onClick(picker) {\r\n          picker.emit('pick', new Date());\r\n        }\r\n      }, {\r\n        text: '昨天',\r\n        onClick(picker) {\r\n          const date = new Date();\r\n          date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n          picker.emit('pick', date);\r\n        }\r\n      }, {\r\n        text: '一周前',\r\n        onClick(picker) {\r\n          const date = new Date();\r\n          date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n          picker.emit('pick', date);\r\n        }\r\n      }],\r\n      multipleSelection: []\r\n    });\r\n\r\n    const value1 = ref('');\r\n    const input1 = ref('');\r\n    const input2 = ref('');\r\n    const multipleTable = ref(null);\r\n\r\n    const toggleSelection = (rows) => {\r\n      if (rows) {\r\n        rows.forEach(row => {\r\n          multipleTable.value.toggleRowSelection(row);\r\n        });\r\n      } else {\r\n        multipleTable.value.clearSelection();\r\n      }\r\n    };\r\n\r\n    const handleSelectionChange = (val) => {\r\n      pickerOptions.value.multipleSelection = val;\r\n    };\r\n\r\n    const handleEdit = (index, row) => {\r\n      console.log(index, row);\r\n    };\r\n\r\n    const handleDelete = (index, row) => {\r\n      console.log(index, row);\r\n    };\r\n\r\n    const router = useRouter();\r\n\r\n    const personalCenter=()=>{\r\n      router.push('/userCenter');\r\n    };\r\n\r\n    const back=()=>{\r\n      router.push('/login');\r\n    };\r\n    return {\r\n      tableData,\r\n      pickerOptions,\r\n      value1,\r\n      input1,\r\n      input2,\r\n      multipleTable,\r\n      toggleSelection,\r\n      handleSelectionChange,\r\n      handleEdit,\r\n      handleDelete,\r\n      personalCenter,\r\n      back,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n.el-header {\r\n  background-color: #ffffff;\r\n  color: #333;\r\n  line-height: 60px;\r\n  z-index: 1; /* Adjusted z-index for header */\r\n  position: relative; /* Added to ensure z-index is applied */\r\n}\r\n\r\n.el-aside {\r\n  color: #333;\r\n  z-index: 2; /* Adjusted z-index for aside */\r\n  position: relative; /* Added to ensure z-index is applied */\r\n}\r\n\r\n.el-main {\r\n  flex: 1;\r\n  overflow: auto;\r\n}\r\n\r\n.menu-with-shadow {\r\n  box-shadow: 5px 0px 6px rgba(0.5, 0.5, 0,0.5); /* 自定义阴影效果，可根据需要调整颜色和大小 */\r\n}\r\n\r\n.header-with-shadow {\r\n  box-shadow: 0px 0px 3px rgba(0, 0, 0,0.5); /* 自定义阴影效果，可根据需要调整颜色和大小 */\r\n}\r\n\r\n.custom-table .el-table__header th {\r\n  background-color: #e0e0e0; /* 更改背景颜色 */\r\n  color: #6c6c6c; /* 更改文字颜色 */\r\n  text-align: center; /* 居中对齐 */\r\n}\r\n\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}