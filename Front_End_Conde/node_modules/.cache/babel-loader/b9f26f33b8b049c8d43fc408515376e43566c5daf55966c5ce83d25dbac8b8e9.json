{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from 'vue';\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\nexport default defineComponent({\n  components: {\n    ElForm,\n    ElFormItem,\n    ElInput,\n    ElButton\n  },\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        tel: '',\n        password: '',\n        confirmPassword: '',\n        code: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入企业名称',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 14,\n          message: '长度在 5 到 14 个字符',\n          trigger: 'blur'\n        }],\n        tel: [{\n          required: true,\n          message: '请输入企业联系方式',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 14,\n          message: '长度在 5 到 14 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度要大于6',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (value !== this.registerForm.password) {\n              callback(new Error('两次输入的密码不一致'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      },\n      captchaUrl: require('@/assets/captcha.png') // 初始化验证码图片\n    };\n  },\n  methods: {\n    refreshCaptcha() {\n      // 刷新验证码图片的逻辑\n      // 示例：假设重新生成一个随机数作为验证码\n      this.captchaUrl = require('@/assets/captcha.png'); // 替换成新的验证码地址或重新生成验证码的方法\n    },\n    submitForm() {\n      // Verify if $refs.registerFormRef is defined before accessing it\n      if (this.$refs.registerFormRef) {\n        this.$refs.registerFormRef.validate(valid => {\n          if (valid && this.registerForm.code === 'yhuv') {\n            this.handleSuccess();\n          } else {\n            this.handleError();\n          }\n        });\n      } else {\n        console.error('Form reference is undefined.');\n      }\n    },\n    handleSuccess() {\n      console.log('注册表单提交成功:', this.registerForm);\n      // 注册成功后跳转到登录页面\n      this.$router.push('/login');\n      ElMessage({\n        showClose: true,\n        message: '注册成功！',\n        type: 'success'\n      });\n    },\n    handleError() {\n      console.error('注册信息有误，请检查并重新填写！');\n      ElMessage.error('注册信息有误，请检查并重新填写！');\n    },\n    back() {\n      // 返回到登录页面\n      this.$router.push('/login');\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","ElForm","ElFormItem","ElInput","ElButton","ElMessage","components","data","registerForm","username","tel","password","confirmPassword","code","rules","required","message","trigger","min","max","validator","rule","value","callback","Error","captchaUrl","require","methods","refreshCaptcha","submitForm","$refs","registerFormRef","validate","valid","handleSuccess","handleError","console","error","log","$router","push","showClose","type","back"],"sources":["C:\\Users\\dell\\Documents\\GitHub\\NEU-SystemDevelop-2024\\Front_End_Conde\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-background\">\r\n    <div class=\"register-container\" style=\"margin-top: 40px\">\r\n      <h3 style=\"font-size: 30px;\">用户注册</h3>\r\n      <!-- 注册表单 -->\r\n\r\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerFormRef\" class=\"register-form\">\r\n        <el-form-item label=\"企业名称\" prop=\"username\">\r\n          <el-input v-model=\"registerForm.username\" placeholder=\"请输入企业名称\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"联系方式\" prop=\"tel\">\r\n          <el-input v-model=\"registerForm.tel\" placeholder=\"请输入企业联系方式\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"设置密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"registerForm.password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input type=\"password\" v-model=\"registerForm.confirmPassword\" placeholder=\"请确认密码\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"验证码\" prop=\"code\">\r\n\r\n        </el-form-item>\r\n        <div class=\"code-input-container\" style=\"margin-top: 30px;\">\r\n          <el-input v-model=\"registerForm.code\" placeholder=\"请输入验证码\" class=\"captcha-input\" style=\"margin-top: -30px;\"></el-input>\r\n          <img :src=\"captchaUrl\" class=\"captcha-img\"  @click=\"refreshCaptcha\" />\r\n        </div>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" style=\"margin-top: 20px; margin-left: 110px;\">注册</el-button>\r\n          <el-button @click=\"back\" style=\"margin-top: 20px;\">返回</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ElForm,\r\n    ElFormItem,\r\n    ElInput,\r\n    ElButton\r\n  },\r\n  data() {\r\n    return {\r\n      registerForm: {\r\n        username: '',\r\n        tel: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        code: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入企业名称', trigger: 'blur' },\r\n          { min: 5, max: 14, message: '长度在 5 到 14 个字符', trigger: 'blur' }\r\n        ],\r\n        tel: [\r\n          { required: true, message: '请输入企业联系方式', trigger: 'blur' },\r\n          { min: 5, max: 14, message: '长度在 5 到 14 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度要大于6', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value !== this.registerForm.password) {\r\n                callback(new Error('两次输入的密码不一致'));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        code: [{ required: true, message: '请输入验证码', trigger: 'blur' }]\r\n      },\r\n      captchaUrl: require('@/assets/captcha.png') // 初始化验证码图片\r\n    };\r\n  },\r\n  methods: {\r\n    refreshCaptcha() {\r\n      // 刷新验证码图片的逻辑\r\n      // 示例：假设重新生成一个随机数作为验证码\r\n      this.captchaUrl = require('@/assets/captcha.png'); // 替换成新的验证码地址或重新生成验证码的方法\r\n    },\r\n    submitForm() {\r\n      // Verify if $refs.registerFormRef is defined before accessing it\r\n      if (this.$refs.registerFormRef) {\r\n        this.$refs.registerFormRef.validate((valid) => {\r\n          if (valid && this.registerForm.code === 'yhuv') {\r\n            this.handleSuccess();\r\n          } else {\r\n            this.handleError();\r\n          }\r\n        });\r\n      } else {\r\n        console.error('Form reference is undefined.');\r\n      }\r\n    },\r\n    handleSuccess() {\r\n      console.log('注册表单提交成功:', this.registerForm);\r\n      // 注册成功后跳转到登录页面\r\n      this.$router.push('/login');\r\n      ElMessage({\r\n        showClose: true,\r\n        message: '注册成功！',\r\n        type: 'success'\r\n      });\r\n    },\r\n    handleError() {\r\n      console.error('注册信息有误，请检查并重新填写！');\r\n      ElMessage.error('注册信息有误，请检查并重新填写！');\r\n    },\r\n    back() {\r\n      // 返回到登录页面\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  width: 350px;\r\n  margin: auto;\r\n  margin-top: 180px;\r\n  padding: 15px 35px;\r\n  background-color: aliceblue;\r\n  border: 1px solid blue;\r\n  border-radius: 15px;\r\n  box-shadow: 0 0 25px #000000;\r\n}\r\n\r\n.code-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.register-background {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(\"../assets/background.png\");\r\n  background-size: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.captcha-img {\r\n  width: 80px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  margin-top: -30px;\r\n}\r\n\r\n.captcha-input {\r\n  flex-grow: 1; /* 让输入框充满剩余空间 */\r\n  margin-right: 10px; /* 调整输入框与验证码图片的间距 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}