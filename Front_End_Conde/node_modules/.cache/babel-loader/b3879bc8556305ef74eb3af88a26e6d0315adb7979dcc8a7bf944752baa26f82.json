{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { useStore } from 'vuex';\nimport { defineComponent } from 'vue';\n// import { useStore } from 'vuex'\nimport axios from 'axios';\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\nexport default defineComponent({\n  components: {\n    ElForm,\n    ElFormItem,\n    ElInput,\n    ElButton\n  },\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: '',\n        code: ''\n      },\n      checked: true,\n      captchaUrl: require('@/assets/captcha.png'),\n      // Initial captcha URL\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 14,\n          message: '长度在 2 到 14 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度要大于6',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitLogin() {\n      this.$refs.loginFormRef.validate(valid => {\n        if (valid && this.loginForm.code === 'yhuv') {\n          let fd = new FormData();\n          fd.append('userName', this.loginForm.username);\n          fd.append('password', this.loginForm.password);\n          axios.post('http://localhost:8070/user/login', fd).then(response => {\n            if (response.data.isOk) {\n              this.$store.dispatch('setUser', response.data.user);\n              ElMessage({\n                showClose: true,\n                message: '登录成功！',\n                type: 'success'\n              });\n              console.log(\"登录成功的数据+\", response.data.user.userName, response.data.user.role);\n              this.$router.push({\n                path: '/homepage'\n              });\n            } else {\n              ElMessage.error('登录出错请重新输入');\n            }\n          });\n        }\n      });\n    },\n    register() {\n      this.$router.push('/meeting');\n    },\n    refreshCaptcha() {\n      // Replace with actual logic to refresh captcha\n      this.captchaUrl = require('@/assets/captcha.png');\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","axios","ElForm","ElFormItem","ElInput","ElButton","ElMessage","components","data","loginForm","username","password","code","checked","captchaUrl","require","rules","required","message","trigger","min","max","methods","submitLogin","$refs","loginFormRef","validate","valid","fd","FormData","append","post","then","response","isOk","$store","dispatch","user","showClose","type","console","log","userName","role","$router","push","path","error","register","refreshCaptcha"],"sources":["C:\\Users\\dell\\Documents\\GitHub\\NEU-SystemDevelop-2024\\Front_End_Conde\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginFormRef\" class=\"loginContainer\">\r\n      <h2 class=\"loginTitle\">\r\n        测盟汇管理系统\r\n      </h2>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <el-input type=\"text\" v-model=\"loginForm.username\" placeholder=\"请输入用户名\" />\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\" />\r\n      </el-form-item>\r\n      <el-form-item prop=\"code\">\r\n        <el-input type=\"text\" auto-complete=\"off\" v-model=\"loginForm.code\" placeholder=\"请输入验证码\" style=\"width: 250px; margin-right: 5px\" />\r\n        <img :src=\"captchaUrl\" class=\"captcha-img\" @click=\"refreshCaptcha\" />\r\n      </el-form-item>\r\n      <el-checkbox v-model=\"checked\" class=\"loginRemember\">记住我</el-checkbox>\r\n\r\n      <el-button type=\"primary\" style=\"width:100%\" @click=\"submitLogin\">登录</el-button>\r\n      <div class=\"button-container\">\r\n        <el-button style=\"width:100%; margin-top: 10px;\" @click=\"register\">注册</el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { useStore } from 'vuex';\r\nimport { defineComponent } from 'vue'; \r\n// import { useStore } from 'vuex'\r\nimport axios from 'axios';\r\n\r\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ElForm,\r\n    ElFormItem,\r\n    ElInput,\r\n    ElButton\r\n  },\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        code: ''\r\n      },\r\n      checked: true,\r\n      captchaUrl: require('@/assets/captcha.png'), // Initial captcha URL\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 2, max: 14, message: '长度在 2 到 14 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度要大于6', trigger: 'blur' }\r\n        ],\r\n        code: [\r\n          { required: true, message: '请输入验证码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitLogin() {\r\n      this.$refs.loginFormRef.validate(valid => {\r\n        if (valid && this.loginForm.code === 'yhuv') {\r\n          let fd = new FormData()\r\n          fd.append('userName', this.loginForm.username);\r\n          fd.append('password', this.loginForm.password);\r\n          axios.post('http://localhost:8070/user/login', fd)\r\n            .then(response => {\r\n              if (response.data.isOk) {\r\n                this.$store.dispatch('setUser', response.data.user);\r\n                ElMessage({\r\n                  showClose: true,\r\n                  message: '登录成功！',\r\n                  type: 'success'\r\n                });\r\n                console.log(\"登录成功的数据+\", response.data.user.userName, response.data.user.role)\r\n                this.$router.push({ path: '/homepage'});\r\n              } else {\r\n                ElMessage.error('登录出错请重新输入');\r\n              }\r\n            })\r\n        }\r\n      });\r\n    },\r\n    register() {\r\n      this.$router.push('/meeting');\r\n    },\r\n    refreshCaptcha() {\r\n      // Replace with actual logic to refresh captcha\r\n      this.captchaUrl = require('@/assets/captcha.png');\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.loginContainer {\r\n  border-radius: 15px;\r\n  background-clip: padding-box;\r\n  text-align: left;\r\n  margin: auto;\r\n  margin-top: 180px;\r\n  width: 350px;\r\n  padding: 15px 35px 15px 35px;\r\n  background: aliceblue;\r\n  border: 1px solid blue;\r\n  box-shadow: 0 0 25px #000000;\r\n}\r\n\r\n.loginTitle {\r\n  margin: 0 auto 20px auto;\r\n  text-align: center;\r\n  font-size: 40px;\r\n}\r\n\r\n.loginRemember {\r\n  text-align: left;\r\n  margin: 0 0 15px 0;\r\n}\r\n\r\n.body {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(\"../assets/background.png\");\r\n  background-size: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.captcha-img {\r\n  width: 80px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  margin: 0 0 0px 10px;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}