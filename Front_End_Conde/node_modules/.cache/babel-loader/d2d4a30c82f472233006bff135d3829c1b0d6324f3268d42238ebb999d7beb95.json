{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c6101e4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"loginTitle\"\n}, \" 测盟汇管理系统 \", -1 /* HOISTED */));\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    model: _ctx.loginForm,\n    rules: _ctx.rules,\n    ref: \"loginFormRef\",\n    class: \"loginContainer\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_form_item, {\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"text\",\n        modelValue: _ctx.loginForm.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.loginForm.username = $event),\n        placeholder: \"请输入用户名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: _ctx.loginForm.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.loginForm.password = $event),\n        placeholder: \"请输入密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"code\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"text\",\n        \"auto-complete\": \"off\",\n        modelValue: _ctx.loginForm.code,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.loginForm.code = $event),\n        placeholder: \"请输入验证码\",\n        style: {\n          \"width\": \"250px\",\n          \"margin-right\": \"5px\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"img\", {\n        src: _ctx.captchaUrl,\n        class: \"captcha-img\",\n        onClick: _cache[3] || (_cache[3] = (...args) => _ctx.refreshCaptcha && _ctx.refreshCaptcha(...args))\n      }, null, 8 /* PROPS */, _hoisted_3)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_checkbox, {\n      modelValue: _ctx.checked,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.checked = $event),\n      class: \"loginRemember\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"记住我\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      style: {\n        \"width\": \"100%\"\n      },\n      onClick: _ctx.submitLogin\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"登录\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n      style: {\n        \"width\": \"100%\",\n        \"margin-top\": \"10px\"\n      },\n      onClick: _ctx.register\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"注册\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_el_form","model","_ctx","loginForm","rules","ref","default","_withCtx","_hoisted_2","_component_el_form_item","prop","_component_el_input","type","modelValue","username","_cache","$event","placeholder","_","password","code","style","src","captchaUrl","onClick","args","refreshCaptcha","_hoisted_3","_component_el_checkbox","checked","_createTextVNode","_component_el_button","submitLogin","_hoisted_4","register"],"sources":["C:\\Users\\dell\\Documents\\GitHub\\NEU-SystemDevelop-2024\\Front_End_Conde\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginFormRef\" class=\"loginContainer\">\r\n      <h2 class=\"loginTitle\">\r\n        测盟汇管理系统\r\n      </h2>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <el-input type=\"text\" v-model=\"loginForm.username\" placeholder=\"请输入用户名\" />\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\" />\r\n      </el-form-item>\r\n      <el-form-item prop=\"code\">\r\n        <el-input type=\"text\" auto-complete=\"off\" v-model=\"loginForm.code\" placeholder=\"请输入验证码\" style=\"width: 250px; margin-right: 5px\" />\r\n        <img :src=\"captchaUrl\" class=\"captcha-img\" @click=\"refreshCaptcha\" />\r\n      </el-form-item>\r\n      <el-checkbox v-model=\"checked\" class=\"loginRemember\">记住我</el-checkbox>\r\n\r\n      <el-button type=\"primary\" style=\"width:100%\" @click=\"submitLogin\">登录</el-button>\r\n      <div class=\"button-container\">\r\n        <el-button style=\"width:100%; margin-top: 10px;\" @click=\"register\">注册</el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { useStore } from 'vuex';\r\nimport { defineComponent } from 'vue'; \r\n// import { useStore } from 'vuex'\r\nimport axios from 'axios';\r\n\r\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ElForm,\r\n    ElFormItem,\r\n    ElInput,\r\n    ElButton\r\n  },\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        code: ''\r\n      },\r\n      checked: true,\r\n      captchaUrl: require('@/assets/captcha.png'), // Initial captcha URL\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 2, max: 14, message: '长度在 2 到 14 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度要大于6', trigger: 'blur' }\r\n        ],\r\n        code: [\r\n          { required: true, message: '请输入验证码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitLogin() {\r\n      this.$refs.loginFormRef.validate(valid => {\r\n        if (valid && this.loginForm.code === 'yhuv') {\r\n          let fd = new FormData()\r\n          fd.append('userName', this.loginForm.username);\r\n          fd.append('password', this.loginForm.password);\r\n          axios.post('http://localhost:8070/user/login', fd)\r\n            .then(response => {\r\n              if (response.data.isOk) {\r\n                this.$store.dispatch('setUser', response.data.user);\r\n                ElMessage({\r\n                  showClose: true,\r\n                  message: '登录成功！',\r\n                  type: 'success'\r\n                });\r\n                console.log(\"登录成功的数据+\", response.data.user.userName, response.data.user.role)\r\n                this.$router.push({ path: '/userManage'});\r\n              } else {\r\n                ElMessage.error('登录出错请重新输入');\r\n              }\r\n            })\r\n        }\r\n      });\r\n    },\r\n    register() {\r\n      this.$router.push('/meeting');\r\n    },\r\n    refreshCaptcha() {\r\n      // Replace with actual logic to refresh captcha\r\n      this.captchaUrl = require('@/assets/captcha.png');\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.loginContainer {\r\n  border-radius: 15px;\r\n  background-clip: padding-box;\r\n  text-align: left;\r\n  margin: auto;\r\n  margin-top: 180px;\r\n  width: 350px;\r\n  padding: 15px 35px 15px 35px;\r\n  background: aliceblue;\r\n  border: 1px solid blue;\r\n  box-shadow: 0 0 25px #000000;\r\n}\r\n\r\n.loginTitle {\r\n  margin: 0 auto 20px auto;\r\n  text-align: center;\r\n  font-size: 40px;\r\n}\r\n\r\n.loginRemember {\r\n  text-align: left;\r\n  margin: 0 0 15px 0;\r\n}\r\n\r\n.body {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(\"../assets/background.png\");\r\n  background-size: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.captcha-img {\r\n  width: 80px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  margin: 0 0 0px 10px;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}