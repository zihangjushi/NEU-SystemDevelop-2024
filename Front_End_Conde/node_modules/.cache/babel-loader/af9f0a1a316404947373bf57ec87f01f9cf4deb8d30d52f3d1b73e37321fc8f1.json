{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-03589122\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"register-background\"\n};\nconst _hoisted_2 = {\n  class: \"register-container\",\n  style: {\n    \"margin-top\": \"40px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  style: {\n    \"font-size\": \"30px\"\n  }\n}, \"用户注册\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"code-input-container\",\n  style: {\n    \"margin-top\": \"30px\"\n  }\n};\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createCommentVNode(\" 注册表单 \"), _createVNode(_component_el_form, {\n    model: _ctx.registerForm,\n    rules: _ctx.rules,\n    ref: \"registerFormRef\",\n    class: \"register-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"企业名称\",\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.registerForm.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.registerForm.username = $event),\n        placeholder: \"请输入企业名称\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"联系方式\",\n      prop: \"tel\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.registerForm.tel,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.registerForm.tel = $event),\n        placeholder: \"请输入企业联系方式\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"设置密码\",\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: _ctx.registerForm.password,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.registerForm.password = $event),\n        placeholder: \"请输入密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"确认密码\",\n      prop: \"confirmPassword\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        type: \"password\",\n        modelValue: _ctx.registerForm.confirmPassword,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.registerForm.confirmPassword = $event),\n        placeholder: \"请确认密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"验证码\",\n      prop: \"code\"\n    }), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n      modelValue: _ctx.registerForm.code,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.registerForm.code = $event),\n      placeholder: \"请输入验证码\",\n      class: \"captcha-input\",\n      style: {\n        \"margin-top\": \"-30px\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"img\", {\n      src: _ctx.captchaUrl,\n      class: \"captcha-img\",\n      onClick: _cache[5] || (_cache[5] = (...args) => _ctx.refreshCaptcha && _ctx.refreshCaptcha(...args))\n    }, null, 8 /* PROPS */, _hoisted_5)]), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _ctx.submitForm,\n        style: {\n          \"margin-top\": \"20px\",\n          \"margin-left\": \"110px\"\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"注册\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: _ctx.back,\n        style: {\n          \"margin-top\": \"20px\"\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"返回\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_createVNode","_component_el_form","model","_ctx","registerForm","rules","ref","default","_withCtx","_component_el_form_item","label","prop","_component_el_input","modelValue","username","_cache","$event","placeholder","_","tel","type","password","confirmPassword","_hoisted_4","code","src","captchaUrl","onClick","args","refreshCaptcha","_hoisted_5","_component_el_button","submitForm","_createTextVNode","back"],"sources":["C:\\Users\\dell\\Documents\\GitHub\\NEU-SystemDevelop-2024\\Front_End_Conde\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-background\">\r\n    <div class=\"register-container\" style=\"margin-top: 40px\">\r\n      <h3 style=\"font-size: 30px;\">用户注册</h3>\r\n      <!-- 注册表单 -->\r\n\r\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerFormRef\" class=\"register-form\">\r\n        <el-form-item label=\"企业名称\" prop=\"username\">\r\n          <el-input v-model=\"registerForm.username\" placeholder=\"请输入企业名称\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"联系方式\" prop=\"tel\">\r\n          <el-input v-model=\"registerForm.tel\" placeholder=\"请输入企业联系方式\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"设置密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"registerForm.password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input type=\"password\" v-model=\"registerForm.confirmPassword\" placeholder=\"请确认密码\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"验证码\" prop=\"code\">\r\n\r\n        </el-form-item>\r\n        <div class=\"code-input-container\" style=\"margin-top: 30px;\">\r\n          <el-input v-model=\"registerForm.code\" placeholder=\"请输入验证码\" class=\"captcha-input\" style=\"margin-top: -30px;\"></el-input>\r\n          <img :src=\"captchaUrl\" class=\"captcha-img\"  @click=\"refreshCaptcha\" />\r\n        </div>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" style=\"margin-top: 20px; margin-left: 110px;\">注册</el-button>\r\n          <el-button @click=\"back\" style=\"margin-top: 20px;\">返回</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ElForm,\r\n    ElFormItem,\r\n    ElInput,\r\n    ElButton\r\n  },\r\n  data() {\r\n    return {\r\n      registerForm: {\r\n        username: '',\r\n        tel: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        code: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入企业名称', trigger: 'blur' },\r\n          { min: 5, max: 14, message: '长度在 5 到 14 个字符', trigger: 'blur' }\r\n        ],\r\n        tel: [\r\n          { required: true, message: '请输入企业联系方式', trigger: 'blur' },\r\n          { min: 5, max: 14, message: '长度在 5 到 14 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度要大于6', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value !== this.registerForm.password) {\r\n                callback(new Error('两次输入的密码不一致'));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        code: [{ required: true, message: '请输入验证码', trigger: 'blur' }]\r\n      },\r\n      captchaUrl: require('@/assets/captcha.png') // 初始化验证码图片\r\n    };\r\n  },\r\n  methods: {\r\n    refreshCaptcha() {\r\n      // 刷新验证码图片的逻辑\r\n      // 示例：假设重新生成一个随机数作为验证码\r\n      this.captchaUrl = require('@/assets/captcha.png'); // 替换成新的验证码地址或重新生成验证码的方法\r\n    },\r\n    submitForm() {\r\n      // Verify if $refs.registerFormRef is defined before accessing it\r\n      if (this.$refs.registerFormRef) {\r\n        this.$refs.registerFormRef.validate((valid) => {\r\n          if (valid && this.registerForm.code === 'yhuv') {\r\n            this.handleSuccess();\r\n          } else {\r\n            this.handleError();\r\n          }\r\n        });\r\n      } else {\r\n        console.error('Form reference is undefined.');\r\n      }\r\n    },\r\n    handleSuccess() {\r\n      console.log('注册表单提交成功:', this.registerForm);\r\n      // 注册成功后跳转到登录页面\r\n      this.$router.push('/login');\r\n      ElMessage({\r\n        showClose: true,\r\n        message: '注册成功！',\r\n        type: 'success'\r\n      });\r\n    },\r\n    handleError() {\r\n      console.error('注册信息有误，请检查并重新填写！');\r\n      ElMessage.error('注册信息有误，请检查并重新填写！');\r\n    },\r\n    back() {\r\n      // 返回到登录页面\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  width: 350px;\r\n  margin: auto;\r\n  margin-top: 180px;\r\n  padding: 15px 35px;\r\n  background-color: aliceblue;\r\n  border: 1px solid blue;\r\n  border-radius: 15px;\r\n  box-shadow: 0 0 25px #000000;\r\n}\r\n\r\n.code-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.register-background {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(\"../assets/background.png\");\r\n  background-size: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.captcha-img {\r\n  width: 80px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  margin-top: -30px;\r\n}\r\n\r\n.captcha-input {\r\n  flex-grow: 1; /* 让输入框充满剩余空间 */\r\n  margin-right: 10px; /* 调整输入框与验证码图片的间距 */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}